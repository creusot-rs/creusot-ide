{
    "scopeName": "source.rust.embedded.creusot",
    "injectionSelector": "L:source.rust -string -comment",
    "patterns": [
        {
            "begin": "#\\[",
            "end": "\\]",
            "contentName": "meta.embedded.creusot source.creusot",
            "patterns": [
                { "match": "\\b(?:logic|trusted|opaque|bitwise_proof|check|erasure|builtin|intrinsic|open_inv_result)\\b",
                  "name": "keyword" },
                { "include": "#check-arguments" },
                { "include": "#logic-arguments" },
                { "include": "#string" }
            ]
        }
    ],
    "repository": {
        "paren": {
            "patterns": [
                { "include": "#parentheses" },
                { "include": "#brackets" },
                { "include": "#braces" }
            ]
        },
        "check-arguments": {
            "begin": "(?<=check)\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": { "name": "punctuation.section.parens.begin" }
            },
            "endCaptures": {
                "0": { "name": "punctuation.section.parens.end" }
            },
            "patterns": [
                { "include": "#paren" },
                {
                    "match": "\\b(?:terminates|ghost)\\b",
                    "name": "keyword"
                }
            ]
        },
        "logic-arguments": {
            "begin": "(?<=logic)\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": { "name": "punctuation.section.parens.begin" }
            },
            "endCaptures": {
                "0": { "name": "punctuation.section.parens.end" }
            },
            "patterns": [
                {
                    "match": "\\b(?:prophetic|open|law|opaque|sealed|inline)\\b",
                    "name": "keyword"
                },
                { "include": "#open-arguments" },
                { "include": "#paren" }
            ]
        },
        "open-arguments": {
            "begin": "(?<=open)\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": { "name": "punctuation.section.parens.begin" }
            },
            "endCaptures": {
                "0": { "name": "punctuation.section.parens.end" }
            },
            "patterns": [
                {
                    "match": "\\b(?:self|super|crate)\\b",
                    "name": "keyword"
                }
            ]
        },
        "brackets": {
            "begin": "\\[",
            "end": "\\]",
            "beginCaptures": {
                "0": { "name": "punctuation.section.bracket.begin" }
            },
            "endCaptures": {
                "0": { "name": "punctuation.section.bracket.end" }
            },
            "patterns": [
                { "include": "#paren" }
            ]
        },
        "braces": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": { "name": "punctuation.section.parens.begin" }
            },
            "endCaptures": {
                "0": { "name": "punctuation.section.parens.end" }
            },
            "patterns": [
                { "include": "#paren" }
            ]
        },
        "string": {
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "match": "\\\\.",
                    "name": "constant.character.escape.untitled"
                }
            ],
            "name": "string.quoted.double"
        }
    }
}
